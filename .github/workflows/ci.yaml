# This is for CD
name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build the project
    runs-on: ubuntu-latest
    # if github.event_name="pull_request"
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Run eslint
        run: npm run lint:fix
      - name: Test and Coverage
        run: npm run test
        env:
          DB_HOST: ${{secrets.TEST_DB_HOST}}
          DB_PORT: ${{secrets.TEST_DB_PORT}}
          DB_USERNAME: ${{secrets.TEST_DB_USERNAME}}
          DB_PASSWORD: ${{secrets.TEST_DB_PASSWORD}}
          DB_NAME: ${{secrets.TEST_DB_NAME}}
          REFRESH_TOKEN_SECRET: ${{secrets.REFRESH_TOKEN_SECRET}}
          JWKS_URI: ${{secrets.JWKS_URI}}
          PRIVATE_KEY: ${{secrets.PRIVATE_KEY}}
          DB_SSL: ${{secrets.DB_SSL}}
      - name: Build-ts
        run: npm run build
      - name: Sonar Cloud scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
  build-and-push-docker:
    name: Build and pushed docker image
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: panda747767328/auth-service
      IMAGE_TAG: build-${{github.run_number}}
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
      - name: Build docker image
        run: docker build -t ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}} -f docker/prod/Dockerfile .
      - name: push docker image to docker hub
        run: docker push ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
